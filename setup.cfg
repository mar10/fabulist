[metadata]
# name = fabulist  # GitHub dependants needs it in setup.py?
version = attr: fabulist.__version__
author = Martin Wendt
author_email = fabulist@wwwendt.de
maintainer = Martin Wendt
maintainer_email = fabulist@wwwendt.de
url = https://github.com/mar10/fabulist/
project_urls =
    Bug Tracker = https://github.com/mar10/fabulist/issues
    Source Code = https://github.com/mar10/fabulist
    Documentation = https://fabulist.readthedocs.io/
    Download = https://github.com/mar10/fabulist/releases/latest
description = "Generate random strings that make sense."
long_description = file: README.md
long_description_content_type = text/markdown
keywords = python test-data word-list generator mock
license = MIT
license_files = LICENSE.txt
classifiers =
    # Development Status :: 3 - Alpha
    Development Status :: 4 - Beta
    # Development Status :: 5 - Production/Stable
    # Environment :: Console
    Intended Audience :: Developers
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3 :: Only
    ; Programming Language :: Python :: 3.7  # EOL 2023-06-27
    ; Programming Language :: Python :: 3.8  # EOL 2024-10
    Programming Language :: Python :: 3.9  # EOL 2025-10
    Programming Language :: Python :: 3.10  # EOL 2026-10
    Programming Language :: Python :: 3.11  # EOL 2027-10
    Programming Language :: Python :: 3.12  # EOL 2028-10 
    ; Programming Language :: Python :: 3.13  # EOL 2029-10
    Topic :: Software Development :: Libraries :: Python Modules

[options]
package_dir =
    = .
packages = find:
zip_safe = False

# scripts =
#   bin/first.py
#   bin/second.py

install_requires =
    # snazzy

# [options.package_data]
# * = *.txt, *.rst
# hello = *.msg

[options.extras_require]
# graph = pydot; rdflib; graphviz
# pdf = ReportLab>=1.2; RXP
# rest = docutils>=0.3; pack ==1.1, ==1.3
# random = fabulist
# all = pydot; rdflib; graphviz; fabulist

[options.packages.find]
where = .
include_package_data = True
exclude =
    tests
    docs

[options.data_files]
. = CHANGELOG.md
# /etc/my_package =
#     site.d/00_default.conf
#     host.d/00_default.conf
# data = data/img/logo.png, data/svg/icon.svg

[options.entry_points]
console_scripts =
    # fabulist = fabulist.leaves_cli:run

[bdist_wheel]
# set universal = 1 if Python 2 and 3 are supported
universal = false

# [check-manifest]
# ignore =
#     docs/sphinx-build
#     docs/sphinx-build/*

# --------


# try:
#     from cx_Freeze import Executable, setup  # noqa

#     executables = [
#         Executable(
#             script="fabulist/fabulist.py",
#             base=None,
#             targetName="fabulist.exe",
#             # icon= "doc/logo.ico",
#             shortcutName="fabulist",
#         )
#     ]
# except ImportError:
#     # tox has problems to install cx_Freeze to it's venvs, but it is not needed
#     # for the tests anyway
#     print(
#         "Could not import cx_Freeze; 'build' and 'bdist' commands will not be available."
#     )
#     print("See https://pypi.python.org/pypi/cx_Freeze")
#     executables = []


# # # 'setup.py upload' fails on Vista, because .pypirc is searched on 'HOME' path
# # if not "HOME" in os.environ and  "HOMEPATH" in os.environ:
# #     os.environ.setdefault("HOME", os.environ.get("HOMEPATH", ""))
# #     print("Initializing HOME environment variable to '{}'".format(os.environ["HOME"]))

# install_requires = []
# tests_require = [
#     "pytest",
#     "pytest-cov",
#     "tox",
#     "virtualenv",
# ]

# setup_requires = install_requires

# build_exe_options = {
#     "init_script": "Console",
#     "includes": install_requires,
#     "packages": [],
#     "constants": "BUILD_COPYRIGHT='(c) 2017 Martin Wendt'",
# }

# bdist_msi_options = {
#     "upgrade_code": "{69D828C9-7AA2-4822-901E-0BA7E6D1EBE3}",
#     "add_to_path": True,
#     # TODO: configure target dir
#     # "initial_target_dir": r"[ProgramFilesFolder]\%s\%s" % (company_name, product_name),
#     # TODO: configure shortcuts:
#     # http://stackoverflow.com/a/15736406/19166
# }


# setup(
#     name="fabulist",
#     version=__version__,
#     author="Martin Wendt",
#     author_email="fabulist@wwwendt.de",
#     # copyright="(c) 2017 Martin Wendt",
#     maintainer="Martin Wendt",
#     maintainer_email="fabulist@wwwendt.de",
#     url="https://github.com/mar10/fabulist",
#     description="Generate random strings that make sense.",
#     long_description=readme,
#     long_description_content_type="text/markdown",
#     # Development Status :: 2 - Pre-Alpha
#     # Development Status :: 3 - Alpha
#     # Development Status :: 4 - Beta
#     # Development Status :: 5 - Production/Stable
#     classifiers=[
#         "Development Status :: 4 - Beta",
#         "Environment :: Console",
#         "Intended Audience :: Information Technology",
#         "Intended Audience :: Developers",
#         "License :: OSI Approved :: MIT License",
#         "Operating System :: OS Independent",
#         # "Programming Language :: Python :: 2",
#         # "Programming Language :: Python :: 2.7",
#         "Programming Language :: Python :: 3",
#         "Programming Language :: Python :: 3 :: Only",
#         #    "Programming Language :: Python :: 3.4",
#         #    "Programming Language :: Python :: 3.5",
#         # "Programming Language :: Python :: 3.6",
#         # "Programming Language :: Python :: 3.7",
#         "Programming Language :: Python :: 3.8",
#         "Programming Language :: Python :: 3.9",
#         "Programming Language :: Python :: 3.10",
#         "Programming Language :: Python :: 3.11",
#         "Programming Language :: Python :: 3.12",
#         "Topic :: Software Development :: Libraries :: Python Modules",
#         "Topic :: Utilities",
#     ],
#     keywords="python test-data word-list generator mock",
#     license="The MIT License",
#     install_requires=install_requires,
#     setup_requires=setup_requires,
#     tests_require=tests_require,
#     packages=["fabulist"],
#     package_data={"fabulist": ["data/*.txt"]},
#     zip_safe=False,
#     extras_require={},
#     cmdclass={
#         "test": ToxCommand,
#         "sphinx": SphinxCommand,
#     },
#     # entry_points = {
#     #     "console_scripts" : ["fabulist = fabulist.fabulist:run"],
#     #     },
#     executables=executables,
#     options={
#         "build_exe": build_exe_options,
#         "bdist_msi": bdist_msi_options,
#     },
# )
